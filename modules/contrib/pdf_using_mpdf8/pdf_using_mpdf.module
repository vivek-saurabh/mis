<?php
/**
 * @file
 * Generates PDF for given html.
 */

use \Drupal\Core\Link;
use \Drupal\Core\Url;

/**
 * Implements hook_help().
 */
function pdf_using_mpdf_help($route_name, \Drupal\Core\Routing\RouteMatchInterface $route_match) {
  $output = '';
  $html = 'This module is used for converting an HTML of a page to PDF using ';
  $html .= 'the mPDF PHP Library. This module allows you to generate the pdf ';
  $html .= 'documents of any node:<p><strong> PDF creation ';
  $html .= '( www.example.com/node/[nid]/pdf ) </strong></p><p> where nid is ';
  $html .= 'the node id of a node. </p> By creating your own CSS file and/or ';
  $html .= 'the node.tpl.php template files, it is possible to change the look ';
  $html .= 'of the output page to suit your taste.For a more fine-grained ';
  $html .= 'customization, it is possible to use a twig file named: <p><strong> ';
  $html .= 'node--[node-type|node-id].twig.html </strong></p><p> located in the ';
  $html .= 'active theme directory. </p><p> Where node-type and node-id are ';
  $html .= 'Drupal node type (for example page, story, etc.) and node id (for ';
  $html .= 'example 10) respectively. </p> <p>You must run <em>composer.json</em>';
  $html .= 'file (provided with this module) to install the third-party tool ';
  $html .= '- %mPDF - to generate PDF files </p><p> Please follow the ';
  $html .= 'instructions in the README.txt file carefully. </p>';

  $link = Url::fromUri('http://www.mpdf1.com/mpdf/index.php');
  $link = Link::fromTextAndUrl('mPDF', $link)->toString();
  if ($route_name == 'help.page.pdf_using_mpdf') {
    $output = t($html, ['%mPDF' => $link]);
  }
  return $output;
}

/**
 * Check for generate PDF permission.
 *
 * @param string $node
 *   Node array for currnet node.
 *
 * @return bool
 *   TRUE if permision allow and FALSE if access denied.
 */
function _pdf_using_mpdf_attributes_access($node) {

  if (user_access('generate pdf using mpdf')) {
    if (variable_get('pdf_using_mpdf_type_' . $node->type) == 1 ) {
      return TRUE;
    }
    else {
      return FALSE;
    }
  }
  return FALSE; // TRUE or you can user user_access() permissions as well
}

/**
 * Implements hook_entity_info_alter().
 */
//function pdf_using_mpdf_entity_info_alter(&$info) {
//  // Add the 'Print' view mode for nodes.
//  $info['node']['view modes'] += array(
//    'PDF' => array(
//      'label' => t('PDF'),
//      'custom settings' => FALSE,
//    ),
//  );
//}

/**
 * Implements hook_preprocess_node().
 */
//function pdf_using_mpdf_preprocess_node(&$vars) {
//  if ($vars['view_mode'] == 'PDF') {
//    $vars['theme_hook_suggestions'][] = 'node__' . $vars['type'] . '__pdf';
//  }
//}

/**
 * Implements hook_node_view_alter().
 */
//function pdf_using_mpdf_node_view_alter(&$build) {
//  if ($build['#view_mode'] == 'PDF') {
//    // Remove contextual links
//    unset($build['#contextual_links']);
//  }
//}

/**
 *  Get the folder for pdf files.
 */
//function pdf_using_mpdf_get_folder(stdClass $pdfmpdf = NULL) {
//  $folder = &drupal_static(__FUNCTION__);
//  if ( !isset($folder) ) {
//    $folder = variable_get('pdf_using_mpdf', 'pdf_using_mpdf');
//  }
//  if ( !empty($pdfmpdf->smid) ) {
//    return file_build_uri($folder . '/' . $pdfmpdf->smid);
//  }
//  else {
//    return file_build_uri($folder);
//  }
//}
