<?php

/**
 * @file
 * Adding ID to blocks.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\block\Entity\Block;
use Drupal\Component\Utility\Html;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\block\BlockInterface;

/**
  * Implements hook_ENTITY_TYPE_presave().
  */
function block_id_block_presave(BlockInterface $entity) {
  if (empty($entity->getThirdPartySetting('block_id', 'id'))) {
    $entity->unsetThirdPartySetting('block_id', 'id');
  }
}

/**
  * Implements hook_form_FORM_ID_alter().
  */
function block_id_form_block_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (\Drupal::currentUser()->hasPermission('administer block id')) {
    $block = $form_state->getFormObject()->getEntity();

    $form['third_party_settings']['#tree'] = TRUE;
    $form['third_party_settings']['block_id']['id'] = [
      '#type' => 'textfield',
      '#title' => t('Block ID'),
      '#description' => t('CSS ID. Separate multiple id by spaces. (eg. id_1 id_2)'),
      '#default_value' => $block->getThirdPartySetting('block_id', 'id'),
    ];
  }
}


/**
  * Implements hook_preprocess_HOOK().
  */
function block_id_preprocess_block(&$variables) {
  if (!empty($variables['elements']['#id'])) {
    $block = Block::load($variables['elements']['#id']);
    if ($block && $ids = $block->getThirdPartySetting('block_id', 'id')) {
      $id_array = explode(' ', $ids);
    	$variables['attributes']['id'] = $id_array;
    }
  }
}
