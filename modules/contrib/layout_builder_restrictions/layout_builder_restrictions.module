<?php

/**
 * @file
 * Module file for layout builder restrictions.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\layout_builder_restrictions\Form\FormAlter;

/**
 * Implements hook_plugin_filter_TYPE__CONSUMER_alter().
 *
 * Curate the blocks available in the Layout Builder "Add Block" UI.
 */
function layout_builder_restrictions_plugin_filter_block__layout_builder_alter(array &$definitions, array $extra) {
  $layout_builder_restrictions_manager = \Drupal::service('plugin.manager.layout_builder_restriction');
  $restriction_plugins = $layout_builder_restrictions_manager->getSortedPlugins();
  foreach (array_keys($restriction_plugins) as $id) {
    $plugin = $layout_builder_restrictions_manager->createInstance($id);
    $definitions = $plugin->alterBlockDefinitions($definitions, $extra);
  }

  // Invoke deprecated API hook for restricting blocks.
  // @todo: remove after 5 September 2019; see #3033213
  $keys = \Drupal::moduleHandler()->invokeAll('layout_builder_restrictions_allowed_block_keys');
  \Drupal::moduleHandler()->alter('layout_builder_restrictions_allowed_block_keys', $keys);
  if (!empty($keys)) {
    @trigger_error('hook_layout_builder_restrictions_allowed_block_keys and hook_layout_builder_restrictions_allowed_block_keys_alter is deprecated together with Drupal 8.6.0. Please use hook_plugin_filter_TYPE__CONSUMER_alter and more specifically hook_plugin_filter_block__layout_builder_alter instead.', E_USER_DEPRECATED);
    foreach ($definitions as $delta => $definition) {
      if (!in_array((string) $definition['category'], $keys)) {
        unset($definitions[$delta]);
      }
    }
  }

  // Allow hook implementations to modify the allowed blocks.
  \Drupal::moduleHandler()->alter('layout_builder_restrictions_chooser_result', $definitions);

}

/**
 * Implements hook_plugin_filter_TYPE__CONSUMER_alter().
 *
 * Curate the layouts available in the Layout Builder "Add Section" UI.
 */
function layout_builder_restrictions_plugin_filter_layout__layout_builder_alter(array &$definitions, array $extra) {
  $layout_builder_restrictions_manager = \Drupal::service('plugin.manager.layout_builder_restriction');
  $restriction_definitions = $layout_builder_restrictions_manager->getDefinitions();
  $restriction_plugins = $layout_builder_restrictions_manager->getSortedPlugins();
  foreach (array_keys($restriction_plugins) as $id) {
    $plugin = $layout_builder_restrictions_manager->createInstance($id);
    $definitions = $plugin->alterSectionDefinitions($definitions, $extra);
  }

  // Invoke deprecated API hook for restricting layouts.
  // @todo: remove after 5 September 2019; see #3033213
  $keys = \Drupal::moduleHandler()->invokeAll('layout_builder_restrictions_allowed_layouts');
  \Drupal::moduleHandler()->alter('layout_builder_restrictions_allowed_layouts', $keys);
  if (!empty($keys)) {
    @trigger_error('hook_layout_builder_restrictions_allowed_layouts and hook_layout_builder_restrictions_allowed_layouts_alter is deprecated together with Drupal 8.6.0. Please use hook_plugin_filter_TYPE__CONSUMER_alter and more specifically hook_plugin_filter_layout__layout_builder_alter instead.', E_USER_DEPRECATED);
    foreach ($definitions as $delta => $definition) {
      if (!in_array($delta, $keys)) {
        unset($definitions[$delta]);
      }
    }
  }

  // Allow hook implementations to audit available layouts.
  \Drupal::moduleHandler()->alter('layout_builder_restrictions_allowed_layouts', $definitions);

}

/**
 * Implements hook_form_FORM_ID_alter() for the entity view display edit form.
 */
function layout_builder_restrictions_form_entity_view_display_edit_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $entity_view_mode_restriction_active = TRUE;
  if ($config = \Drupal::config('layout_builder_restrictions.plugins')->get('plugin_config')) {
    // Provide the per view mode restriction UI *unless* the plugin is disabled.
    if (isset($config['entity_view_mode_restriction']) && $config['entity_view_mode_restriction']['enabled'] == FALSE) {
      $entity_view_mode_restriction_active = FALSE;
    }
  }
  if ($entity_view_mode_restriction_active) {
    \Drupal::classResolver(FormAlter::class)->alterEntityViewDisplayForm($form, $form_state, $form_id);
  }
}
